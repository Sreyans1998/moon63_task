{"version":3,"sources":["Component/View3.js","Component/View2.js","Component/View1.js","Utility/ViewTabs.js","App.js","index.js"],"names":["View3","props","useState","viewText","setViewText","className","class","id","rows","for","value","onChange","e","target","placeholder","onClick","alert","View2","sendData","a","ReactDOM","render","document","querySelector","View1","text","ViewTabs","view1Btn","setView1Btn","view2Btn","setView2Btn","view3Btn","setView3Btn","popUp","setPopUp","tabToggel","console","log","Button","variant","ControlPointRounded","Backdrop","sx","color","zIndex","theme","drawer","open","App","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49ff7555.chunk.js","sourcesContent":["/*third MAINVIEW_HOLDER */\r\n\r\nimport React, { useState } from 'react'\r\n\r\n\r\n/*This Method is use to render third MAINVIEW_HOLDER into jsx format \r\nUsing onClick event it also use to store data on textarea in viewText variable \r\nusing state hooks of react and display it on alert window.\r\n*/\r\n\r\nconst View3 = (props) => {\r\n    const [viewText, setViewText] = useState('')\r\n\r\n\r\n    /*In this method we simply display alert with textarea value \r\n    i.e. stored in viewText using State hooks using onClick event */\r\n\r\n    const sendData = (value) => {\r\n        alert(`This your Text ${value}`)\r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"card m-5 w-75 mx-auto shadow-lg\">\r\n                <h1 className=\"text-center m-3\">\r\n                    View3 Tab\r\n                </h1>\r\n                <div className=\"container card m-3 position-relative mx-auto h-50\">\r\n                    <h1 className=\"card-header\">\r\n                        Text Box\r\n                    </h1>\r\n                    <textarea class=\"form-control\" \r\n                        id=\"exampleFormControlTextarea1\" \r\n                        rows=\"3\">\r\n                            {props.viewText}\r\n                    </textarea>\r\n                    <div class=\"position-relative card-body m-5\">\r\n                        <label for=\"exampleFormControlTextarea1\" class=\"form-label fs-3\">Write Your Text Here</label>\r\n                        <textarea class=\"form-control\" \r\n                        id=\"exampleFormControlTextarea1\" \r\n                        rows=\"3\"\r\n                        value={viewText}\r\n                        onChange={(e) => setViewText(e.target.value)}\r\n                        placeholder=\"Write Something here......\">\r\n                            {props.viewText}\r\n                        </textarea>\r\n                    </div>\r\n                    <button className=\"position-relative mt-5 w-25 btn btn-primary mx-auto\" onClick={() => {\r\n                        sendData(viewText)}    \r\n                    }>\r\n                    Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View3;","/*second MAINVIEW_HOLDER */\r\n\r\nimport React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport View3 from './View3'\r\n\r\n\r\n/*This Method is use to render second MAINVIEW_HOLDER into jsx format\r\nUsing onClick even it also use to store data on textarea in viewText variable \r\nusing state hooks of react and display it on alert window and\r\nrender third MAINVIEW_HOLDER with a props name viewText.\r\n*/\r\n\r\nconst View2 = (props) => {\r\n    const [viewText, setViewText] = useState('')\r\n\r\n\r\n    /*In sendData method we simply render the third MAINVIEW_HOLDER using onClick event */\r\n\r\n    const sendData = async (value) => {\r\n        await alert(`This your Text ${value}`)\r\n        ReactDOM.render(<View3 viewText={value} />, document.querySelector('#activity'))\r\n    }\r\n\r\n    /*Here we returns the VIEWMENU_HOLDER in jsx format. */\r\n\r\n    return(\r\n        <>\r\n            <div className=\"card m-5 w-75 mx-auto shadow-lg\">\r\n                <h1 className=\"text-center m-3\">\r\n                    View2 Tab\r\n                </h1>\r\n                <div className=\"container card m-3 position-relative mx-auto h-50\">\r\n                    <h1 className=\"card-header\">\r\n                        Text Box\r\n                    </h1>\r\n                    <textarea class=\"form-control\" \r\n                        id=\"exampleFormControlTextarea1\" \r\n                        rows=\"3\">\r\n                            {props.viewText}\r\n                    </textarea>\r\n                    <div class=\"position-relative card-body m-5\">\r\n                        <label for=\"exampleFormControlTextarea1\" class=\"form-label fs-3\">Write Your Text Here</label>\r\n                        <textarea class=\"form-control\" \r\n                        id=\"exampleFormControlTextarea1\" \r\n                        rows=\"3\"\r\n                        value={viewText}\r\n                        onChange={(e) => setViewText(e.target.value)}\r\n                        placeholder=\"Write Something here......\"></textarea>\r\n                    </div>\r\n                    <button className=\"position-relative mt-5 w-25 btn btn-primary mx-auto\" onClick={() => {\r\n                        sendData(viewText)}    \r\n                    }>\r\n                    Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View2;","/*first MAINVIEW_HOLDER */\r\n\r\nimport React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport View2 from \"./View2\"\r\n\r\n/*This Method is use to render first MAINVIEW_HOLDER into jsx format\r\nUsing onClick even it also use to store data on textarea in viewText variable \r\nusing state hooks of react and display it on alert window and\r\nrender second MAINVIEW_HOLDER with a props name viewText.\r\n */\r\n\r\nconst View1 = (props) => {\r\n    const [viewText, setViewText] = useState('')\r\n\r\n\r\n    /*In sendData method we simply render the second MAINVIEW_HOLDER using onClick event */\r\n\r\n    const sendData = async (value) => {\r\n        await alert(`This your Text ${value}`)\r\n        ReactDOM.render(<View2 viewText={value} />, document.querySelector('#activity'))\r\n    }\r\n\r\n    /*Here we returns the VIEWMENU_HOLDER in jsx format. */\r\n\r\n    return(\r\n        <>\r\n            <div className=\"card m-5 w-75 mx-auto shadow-lg\">\r\n                <h1 className=\"text-center m-3\">\r\n                    View1 Tab\r\n                </h1>\r\n                <div className=\"container card m-3 position-relative mx-auto h-50\">\r\n                    <h1 className=\"card-header\">\r\n                        Text Box\r\n                    </h1>\r\n                    <div class=\"position-relative card-body m-5\">\r\n                        <label for=\"exampleFormControlTextarea1\" class=\"form-label fs-3\">Write Your Text Here</label>\r\n                        <textarea class=\"form-control\" \r\n                        id=\"exampleFormControlTextarea1\" \r\n                        rows=\"3\"\r\n                        value={viewText}\r\n                        onChange={(e) => setViewText(e.target.value)}\r\n                        placeholder=\"Write Something here......\">\r\n                            {props.text}\r\n                        </textarea>\r\n                    </div>\r\n                    <button className=\"position-relative mt-5 w-25 btn btn-primary mx-auto\" onClick={() => {\r\n                        sendData(viewText)}    \r\n                    }>\r\n                    Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View1;","/* This is the VIEWMENU_HOLDER */\r\n\r\n\r\nimport { ControlPointRounded } from '@mui/icons-material';\r\nimport { Backdrop, Button } from '@mui/material';\r\nimport React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport View1 from '../Component/View1';\r\nimport View2 from '../Component/View2';\r\nimport View3 from '../Component/View3';\r\n\r\n\r\n/*\r\n    Here the function ViewTabs is use to render VIEWMENU_HOLDER \r\n*/\r\n\r\nconst ViewTabs = () => {\r\n    const [view1Btn, setView1Btn] = useState(false);\r\n    const [view2Btn, setView2Btn] = useState(false);\r\n    const [view3Btn, setView3Btn] = useState(false);\r\n    const [popUp, setPopUp] = useState(false);\r\n\r\n    /* \r\n        Here we toggle from one view to another and also we \r\n        change the style of the buttons in the VIEWMENU_HOLDER \r\n    */\r\n\r\n    const tabToggel = (value) => {\r\n        console.log(value);\r\n\r\n\r\n        /*\r\n            Here we check the condition where the button that we clicked is view1, 2 or 3\r\n            according to that we renders their respective MAINVIEW_HOLDER.\r\n         */\r\n\r\n        if(value === \"view1\"){\r\n            ReactDOM.render(<View1 viewText=\"\" />, document.querySelector('#activity'))\r\n            setView1Btn(true)\r\n            setView2Btn(false)\r\n            setView3Btn(false)\r\n        }\r\n        else if(value === \"view2\"){\r\n            ReactDOM.render(<View2 viewText=\"\" />, document.querySelector('#activity'))\r\n            setView1Btn(false)\r\n            setView2Btn(true)\r\n            setView3Btn(false)\r\n        }\r\n        else if(value === \"view3\"){\r\n            ReactDOM.render(<View3 viewText=\"\" />, document.querySelector('#activity'))\r\n            setView1Btn(false)\r\n            setView2Btn(false)\r\n            setView3Btn(true)\r\n        }\r\n        else{\r\n            ReactDOM.render(<View2 viewText=\"\" />, document.querySelector('#activity'))\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n        This method is use for display the popup menu on onClick event \r\n    */\r\n    const popupOpen = () => {\r\n        setPopUp(true)\r\n    }\r\n\r\n\r\n    /*\r\n        This method is use for stop displaying the popup menu on onClick event\r\n    */\r\n    const popupClose = () => {\r\n        setPopUp(false)\r\n    }\r\n\r\n\r\n    /*\r\n        Here we returns the VIEWMENU_HOLDER in jsx format.\r\n        We use Backdrop tag from material ui for displaying Popup Menu properly.\r\n     */\r\n    return(\r\n        <>\r\n            <div className=\"w-100\">\r\n                <button className={view1Btn ? \"btn btn-danger m-2\" : \"btn btn-primary m-2\"} id=\"tab\" onClick={() => {\r\n                    tabToggel(\"view1\")\r\n                }}>View 1</button>\r\n                <button className={view2Btn ? \"btn btn-danger m-2\" : \"btn btn-primary m-2\"} id=\"tab\" onClick={() => {\r\n                    tabToggel(\"view2\")\r\n                }}>View 2</button>\r\n                <button className={view3Btn ? \"btn btn-danger m-2\" : \"btn btn-primary m-2\"} id=\"tab\" onClick={() => {\r\n                    tabToggel(\"view3\")\r\n                }}>View 3</button>\r\n                <Button variant=\"contained\" onClick={popupOpen}>\r\n                    <ControlPointRounded />\r\n                </Button>\r\n\r\n                <Backdrop\r\n                    sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                    open={popUp}\r\n                    onClick={popupClose}\r\n                >\r\n                    <div class={popUp ? \"card bg-light d-inline w-25 m-5 mb-5 shadow-lg\" : \"d-none\"}>\r\n                        <div className=\"popup text-center\">\r\n                            <button className={view1Btn ? \"btn btn-danger my-3 w-75\" : \"btn btn-primary my-3 w-75\"} id=\"tab\" onClick={() => {\r\n                                tabToggel(\"view1\")\r\n                            }}>View 1</button>\r\n                            <button className={view2Btn ? \"btn btn-danger my-3 w-75\" : \"btn btn-primary my-3 w-75\"} id=\"tab\" onClick={() => {\r\n                                tabToggel(\"view2\")\r\n                            }}>View 2</button>\r\n                            <button className={view3Btn ? \"btn btn-danger my-3 w-75\" : \"btn btn-primary my-3 w-75\"} id=\"tab\" onClick={() => {\r\n                                tabToggel(\"view3\")\r\n                            }}>View 3</button>\r\n                        </div>\r\n                    </div>\r\n                </Backdrop>\r\n            </div>\r\n               \r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n    Below line exports the method so that we can use it in any other file. \r\n*/\r\nexport default ViewTabs;","import './App.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport ViewTabs from \"./Utility/ViewTabs\"\n\n\n/*App method is use to render all the component in one frame which \nnext get render in Index.js file*/\n\nfunction App() {\n  return (\n    <>\n      <div className=\"bg-light shadow-lg\">\n        <ViewTabs />\n      </div>\n      <div id=\"activity\" className=\"d-flex m-5\"></div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}